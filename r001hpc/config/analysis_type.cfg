<?xml version="1.0" encoding="UTF-8"?>
<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean" xmlns:double="http://www.intel.com/2001/XMLSchema#double" xmlns:exsl="http://exslt.org/common" xmlns:int="http://www.w3.org/2001/XMLSchema#int" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
 <internal>
  <name>%HPCPerfCharAtypeName</name>
  <shortName>%HPCPerfCharAtypeShortName</shortName>
  <description>%HPCPerfCharAtypeDescription</description>
  <abbreviation>hpc</abbreviation>
  <alias>hpc-performance</alias>
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>1</int:contentVersion>
  <property name="helpId">configs.analysis_type-hpc</property>
 </internal>
 <prerequisites xsl:version="1.0" exsl:keep_exsl_namespace="">
  <xsl:copy-of select="document('config://analysis_type/include/exprof_prerequisites.xsl')/exprof_prerequisites/*"/>
  <xsl:if test="(exsl:ctx('connectionType', '') = 'mic' or exsl:ctx('connectionType', '') = 'mic-offload')">
   <xsl:value-of select="exsl:error('%ThisAnalysisTypeIsNotApplicable')"/>
  </xsl:if>
  <xsl:copy-of select="document('config://analysis_type/include/sniper_prerequisites.xsl')/prerequisites/*"/>
 </prerequisites>
 <knobs xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <xsl:variable name="pmuCommon" select="document('config://include/pmu_common.xsl')"/>
  <xsl:variable name="isPerfBandwidthAvailable" select="$pmuCommon//variables/isPerfBWAvailable"/>
  <xsl:variable name="defaultBandiwtdth">
   <xsl:value-of select="exsl:ctx('isSEPDriverAvailable', 0) or $isPerfBandwidthAvailable='true'"/>
  </xsl:variable>
  <xsl:variable name="knobsParams">
   <params defaultMemoryBandidth="{$defaultBandiwtdth}" defaultAnalyzeOpenMP="true"/>
  </xsl:variable>
  <xsl:variable name="konbsParamsName">
   <xsl:text>config://analysis_type/include/knobs.xsl?</xsl:text>
   <xsl:for-each select="exsl:node-set($knobsParams)//@*">
    <xsl:value-of select="concat(name(), '=', .)"/>
    <xsl:text>&amp;</xsl:text>
   </xsl:for-each>
  </xsl:variable>
  <xsl:variable name="commonKnobs" select="document($konbsParamsName)"/>
  <doubleKnob id="samplingInterval" displayName="%SamplingInterval" cliName="sampling-interval" boolean:visible="true">
   <description>%SamplingIntervalDescription</description>
   <double:min>0.01</double:min>
   <double:max>1000</double:max>
   <xsl:choose>
    <xsl:when test="exsl:ctx('PMU')='knl'">
     <double:defaultValue>10</double:defaultValue>
    </xsl:when>
    <xsl:otherwise>
     <double:defaultValue>1</double:defaultValue>
    </xsl:otherwise>
   </xsl:choose>
  </doubleKnob>
  <booleanKnob id="enableStackCollection" displayName="%EnableStackCollection" cliName="enable-stack-collection">
   <description>%EnableStackCollectionDescription</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='collectMemoryBW']"/>
  <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='dramBandwidthLimitsAT']"/>
  <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='analyzeOpenMPRegions']"/>
  <stringKnob id="initialViewpoint" displayName="%InitialViewpoint" boolean:visible="false">
   <defaultValue>%OpenMPHotspotsViewpointName</defaultValue>
  </stringKnob>
 </knobs>
 <analysis xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <xsl:copy-of select="document('config://analysis_type/include/prerequisites.xsl')/pmu_prerequisites/*"/>
  <xsl:variable name="events" select="document('config://analysis_type/include/common_events.xsl?processFPU=true')"/>
  <xsl:variable name="MainEvents" select="$events//events/cpi"/>
  <xsl:variable name="MemEvents" select="$events//events/memboundHPC"/>
  <xsl:variable name="FPUEvents" select="$events//events/fpu"/>
  <xsl:variable name="pmuCommon" select="document('config://include/pmu_common.xsl')"/>
  <xsl:variable name="isPerfBandwidthAvailable" select="$pmuCommon//variables/isPerfBWAvailable"/>
  <collector id="runsa">
   <collectorKnob knob="enableVTSSCollection">
    <xsl:copy-of select="exsl:ctx('enableStackCollection', 0)"/>
   </collectorKnob>
   <boolean:collectorKnob knob="advancedLoopAnalysis">true</boolean:collectorKnob>
   <xsl:if test="exsl:ctx('collectMemoryBW', 0)">
    <xsl:choose>
     <xsl:when test="exsl:ctx('isSEPDriverAvailable', 0) or $isPerfBandwidthAvailable='true'">
      <collectorKnob knob="collectMemBandwidth">
       <xsl:copy-of select="exsl:ctx('collectMemoryBW', 0)"/>
      </collectorKnob>
     </xsl:when>
     <xsl:otherwise>
      <xsl:value-of select="exsl:error('%BandwidthIsNotWorkWithoutSampling')"/>
     </xsl:otherwise>
    </xsl:choose>
   </xsl:if>
   <collectorKnob knob="analyzeFPU">
    <xsl:choose>
     <xsl:when test="not (             exsl:ctx('PMU') = 'ivytown'             or exsl:ctx('PMU') = 'ivybridge'             or exsl:ctx('PMU') = 'broadwell'             or exsl:ctx('PMU') = 'broadwell_de'             or exsl:ctx('PMU') = 'broadwell_server'             or exsl:ctx('PMU') = 'skylake'             or exsl:ctx('PMU') = 'skylake_server'             or exsl:ctx('PMU') = 'knl'             )">false      <xsl:value-of select="exsl:warning('%FPUMetricsIsNotSupportedForThisPlatform')"/>
     </xsl:when>
     <xsl:otherwise>true</xsl:otherwise>
    </xsl:choose>
   </collectorKnob>
   <collectorKnob knob="pmuEventConfig">
    <xsl:value-of select="$MainEvents"/>
    <xsl:if test="$MemEvents and $MemEvents != ''">
     <xsl:text>,</xsl:text>
     <xsl:value-of select="$MemEvents"/>
    </xsl:if>
    <xsl:if test="$FPUEvents and $FPUEvents != ''">
     <xsl:text>,</xsl:text>
     <xsl:value-of select="$FPUEvents"/>
    </xsl:if>
   </collectorKnob>
   <boolean:collectorKnob knob="cpuGpuUsageData">true</boolean:collectorKnob>
   <boolean:collectorKnob knob="adjustCollectionBoundsByOMPApps">true</boolean:collectorKnob>
   <xsl:if test="exsl:ctx('PMU') != 'knl' and exsl:ctx('collectMemoryBW', 0) and exsl:ctx('dramBandwidthLimitsAT', 0)">
    <collectorKnob knob="dramBandwidthLimits">true</collectorKnob>
   </xsl:if>
   <collectorKnob knob="collectOpenMPRegions">
    <xsl:value-of select="exsl:ctx('analyzeOpenMPRegions', 0)"/>
   </collectorKnob>
  </collector>
 </analysis>
</bag>
